package com.example.plugins.model.impl;

import com.example.plugins.model.Parts;
import com.example.plugins.model.PartsModel;
import com.example.plugins.model.PartsSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Parts service. Represents a row in the &quot;nec_Parts&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.example.plugins.model.PartsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PartsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PartsImpl
 * @see com.example.plugins.model.Parts
 * @see com.example.plugins.model.PartsModel
 * @generated
 */
@JSON(strict = true)
public class PartsModelImpl extends BaseModelImpl<Parts> implements PartsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a parts model instance should use the {@link com.example.plugins.model.Parts} interface instead.
     */
    public static final String TABLE_NAME = "nec_Parts";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "part_number", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "item_type", Types.VARCHAR },
            { "status", Types.VARCHAR },
            { "status_description", Types.VARCHAR },
            { "legacy_part_number", Types.VARCHAR },
            { "alternate_item", Types.VARCHAR },
            { "unit_cost_material_cost", Types.DOUBLE },
            { "royalty_cost", Types.DOUBLE },
            { "product_code", Types.VARCHAR },
            { "product_code_description", Types.VARCHAR },
            { "product_group", Types.VARCHAR },
            { "product_group_description", Types.VARCHAR },
            { "discount_group", Types.VARCHAR },
            { "discount_group_description", Types.VARCHAR },
            { "us_price_msrp", Types.DOUBLE }
        };
    public static final String TABLE_SQL_CREATE = "create table nec_Parts (id_ LONG not null primary key,part_number VARCHAR(75) null,description VARCHAR(75) null,item_type VARCHAR(75) null,status VARCHAR(75) null,status_description VARCHAR(75) null,legacy_part_number VARCHAR(75) null,alternate_item VARCHAR(75) null,unit_cost_material_cost DOUBLE,royalty_cost DOUBLE,product_code VARCHAR(75) null,product_code_description VARCHAR(75) null,product_group VARCHAR(75) null,product_group_description VARCHAR(75) null,discount_group VARCHAR(75) null,discount_group_description VARCHAR(75) null,us_price_msrp DOUBLE)";
    public static final String TABLE_SQL_DROP = "drop table nec_Parts";
    public static final String ORDER_BY_JPQL = " ORDER BY parts.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY nec_Parts.id_ ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.example.plugins.model.Parts"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.example.plugins.model.Parts"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.example.plugins.model.Parts"));
    private static ClassLoader _classLoader = Parts.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Parts.class };
    private long _id;
    private String _part_number;
    private String _description;
    private String _item_type;
    private String _status;
    private String _status_description;
    private String _legacy_part_number;
    private String _alternate_item;
    private double _unit_cost_material_cost;
    private double _royalty_cost;
    private String _product_code;
    private String _product_code_description;
    private String _product_group;
    private String _product_group_description;
    private String _discount_group;
    private String _discount_group_description;
    private double _us_price_msrp;
    private Parts _escapedModel;

    public PartsModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Parts toModel(PartsSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Parts model = new PartsImpl();

        model.setId(soapModel.getId());
        model.setPart_number(soapModel.getPart_number());
        model.setDescription(soapModel.getDescription());
        model.setItem_type(soapModel.getItem_type());
        model.setStatus(soapModel.getStatus());
        model.setStatus_description(soapModel.getStatus_description());
        model.setLegacy_part_number(soapModel.getLegacy_part_number());
        model.setAlternate_item(soapModel.getAlternate_item());
        model.setUnit_cost_material_cost(soapModel.getUnit_cost_material_cost());
        model.setRoyalty_cost(soapModel.getRoyalty_cost());
        model.setProduct_code(soapModel.getProduct_code());
        model.setProduct_code_description(soapModel.getProduct_code_description());
        model.setProduct_group(soapModel.getProduct_group());
        model.setProduct_group_description(soapModel.getProduct_group_description());
        model.setDiscount_group(soapModel.getDiscount_group());
        model.setDiscount_group_description(soapModel.getDiscount_group_description());
        model.setUs_price_msrp(soapModel.getUs_price_msrp());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Parts> toModels(PartsSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Parts> models = new ArrayList<Parts>(soapModels.length);

        for (PartsSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Parts.class;
    }

    @Override
    public String getModelClassName() {
        return Parts.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("part_number", getPart_number());
        attributes.put("description", getDescription());
        attributes.put("item_type", getItem_type());
        attributes.put("status", getStatus());
        attributes.put("status_description", getStatus_description());
        attributes.put("legacy_part_number", getLegacy_part_number());
        attributes.put("alternate_item", getAlternate_item());
        attributes.put("unit_cost_material_cost", getUnit_cost_material_cost());
        attributes.put("royalty_cost", getRoyalty_cost());
        attributes.put("product_code", getProduct_code());
        attributes.put("product_code_description", getProduct_code_description());
        attributes.put("product_group", getProduct_group());
        attributes.put("product_group_description",
            getProduct_group_description());
        attributes.put("discount_group", getDiscount_group());
        attributes.put("discount_group_description",
            getDiscount_group_description());
        attributes.put("us_price_msrp", getUs_price_msrp());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String part_number = (String) attributes.get("part_number");

        if (part_number != null) {
            setPart_number(part_number);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String item_type = (String) attributes.get("item_type");

        if (item_type != null) {
            setItem_type(item_type);
        }

        String status = (String) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        String status_description = (String) attributes.get(
                "status_description");

        if (status_description != null) {
            setStatus_description(status_description);
        }

        String legacy_part_number = (String) attributes.get(
                "legacy_part_number");

        if (legacy_part_number != null) {
            setLegacy_part_number(legacy_part_number);
        }

        String alternate_item = (String) attributes.get("alternate_item");

        if (alternate_item != null) {
            setAlternate_item(alternate_item);
        }

        Double unit_cost_material_cost = (Double) attributes.get(
                "unit_cost_material_cost");

        if (unit_cost_material_cost != null) {
            setUnit_cost_material_cost(unit_cost_material_cost);
        }

        Double royalty_cost = (Double) attributes.get("royalty_cost");

        if (royalty_cost != null) {
            setRoyalty_cost(royalty_cost);
        }

        String product_code = (String) attributes.get("product_code");

        if (product_code != null) {
            setProduct_code(product_code);
        }

        String product_code_description = (String) attributes.get(
                "product_code_description");

        if (product_code_description != null) {
            setProduct_code_description(product_code_description);
        }

        String product_group = (String) attributes.get("product_group");

        if (product_group != null) {
            setProduct_group(product_group);
        }

        String product_group_description = (String) attributes.get(
                "product_group_description");

        if (product_group_description != null) {
            setProduct_group_description(product_group_description);
        }

        String discount_group = (String) attributes.get("discount_group");

        if (discount_group != null) {
            setDiscount_group(discount_group);
        }

        String discount_group_description = (String) attributes.get(
                "discount_group_description");

        if (discount_group_description != null) {
            setDiscount_group_description(discount_group_description);
        }

        Double us_price_msrp = (Double) attributes.get("us_price_msrp");

        if (us_price_msrp != null) {
            setUs_price_msrp(us_price_msrp);
        }
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public String getPart_number() {
        if (_part_number == null) {
            return StringPool.BLANK;
        } else {
            return _part_number;
        }
    }

    @Override
    public void setPart_number(String part_number) {
        _part_number = part_number;
    }

    @JSON
    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @JSON
    @Override
    public String getItem_type() {
        if (_item_type == null) {
            return StringPool.BLANK;
        } else {
            return _item_type;
        }
    }

    @Override
    public void setItem_type(String item_type) {
        _item_type = item_type;
    }

    @JSON
    @Override
    public String getStatus() {
        if (_status == null) {
            return StringPool.BLANK;
        } else {
            return _status;
        }
    }

    @Override
    public void setStatus(String status) {
        _status = status;
    }

    @JSON
    @Override
    public String getStatus_description() {
        if (_status_description == null) {
            return StringPool.BLANK;
        } else {
            return _status_description;
        }
    }

    @Override
    public void setStatus_description(String status_description) {
        _status_description = status_description;
    }

    @JSON
    @Override
    public String getLegacy_part_number() {
        if (_legacy_part_number == null) {
            return StringPool.BLANK;
        } else {
            return _legacy_part_number;
        }
    }

    @Override
    public void setLegacy_part_number(String legacy_part_number) {
        _legacy_part_number = legacy_part_number;
    }

    @JSON
    @Override
    public String getAlternate_item() {
        if (_alternate_item == null) {
            return StringPool.BLANK;
        } else {
            return _alternate_item;
        }
    }

    @Override
    public void setAlternate_item(String alternate_item) {
        _alternate_item = alternate_item;
    }

    @JSON
    @Override
    public double getUnit_cost_material_cost() {
        return _unit_cost_material_cost;
    }

    @Override
    public void setUnit_cost_material_cost(double unit_cost_material_cost) {
        _unit_cost_material_cost = unit_cost_material_cost;
    }

    @JSON
    @Override
    public double getRoyalty_cost() {
        return _royalty_cost;
    }

    @Override
    public void setRoyalty_cost(double royalty_cost) {
        _royalty_cost = royalty_cost;
    }

    @JSON
    @Override
    public String getProduct_code() {
        if (_product_code == null) {
            return StringPool.BLANK;
        } else {
            return _product_code;
        }
    }

    @Override
    public void setProduct_code(String product_code) {
        _product_code = product_code;
    }

    @JSON
    @Override
    public String getProduct_code_description() {
        if (_product_code_description == null) {
            return StringPool.BLANK;
        } else {
            return _product_code_description;
        }
    }

    @Override
    public void setProduct_code_description(String product_code_description) {
        _product_code_description = product_code_description;
    }

    @JSON
    @Override
    public String getProduct_group() {
        if (_product_group == null) {
            return StringPool.BLANK;
        } else {
            return _product_group;
        }
    }

    @Override
    public void setProduct_group(String product_group) {
        _product_group = product_group;
    }

    @JSON
    @Override
    public String getProduct_group_description() {
        if (_product_group_description == null) {
            return StringPool.BLANK;
        } else {
            return _product_group_description;
        }
    }

    @Override
    public void setProduct_group_description(String product_group_description) {
        _product_group_description = product_group_description;
    }

    @JSON
    @Override
    public String getDiscount_group() {
        if (_discount_group == null) {
            return StringPool.BLANK;
        } else {
            return _discount_group;
        }
    }

    @Override
    public void setDiscount_group(String discount_group) {
        _discount_group = discount_group;
    }

    @JSON
    @Override
    public String getDiscount_group_description() {
        if (_discount_group_description == null) {
            return StringPool.BLANK;
        } else {
            return _discount_group_description;
        }
    }

    @Override
    public void setDiscount_group_description(String discount_group_description) {
        _discount_group_description = discount_group_description;
    }

    @JSON
    @Override
    public double getUs_price_msrp() {
        return _us_price_msrp;
    }

    @Override
    public void setUs_price_msrp(double us_price_msrp) {
        _us_price_msrp = us_price_msrp;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Parts.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Parts toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Parts) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PartsImpl partsImpl = new PartsImpl();

        partsImpl.setId(getId());
        partsImpl.setPart_number(getPart_number());
        partsImpl.setDescription(getDescription());
        partsImpl.setItem_type(getItem_type());
        partsImpl.setStatus(getStatus());
        partsImpl.setStatus_description(getStatus_description());
        partsImpl.setLegacy_part_number(getLegacy_part_number());
        partsImpl.setAlternate_item(getAlternate_item());
        partsImpl.setUnit_cost_material_cost(getUnit_cost_material_cost());
        partsImpl.setRoyalty_cost(getRoyalty_cost());
        partsImpl.setProduct_code(getProduct_code());
        partsImpl.setProduct_code_description(getProduct_code_description());
        partsImpl.setProduct_group(getProduct_group());
        partsImpl.setProduct_group_description(getProduct_group_description());
        partsImpl.setDiscount_group(getDiscount_group());
        partsImpl.setDiscount_group_description(getDiscount_group_description());
        partsImpl.setUs_price_msrp(getUs_price_msrp());

        partsImpl.resetOriginalValues();

        return partsImpl;
    }

    @Override
    public int compareTo(Parts parts) {
        long primaryKey = parts.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Parts)) {
            return false;
        }

        Parts parts = (Parts) obj;

        long primaryKey = parts.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Parts> toCacheModel() {
        PartsCacheModel partsCacheModel = new PartsCacheModel();

        partsCacheModel.id = getId();

        partsCacheModel.part_number = getPart_number();

        String part_number = partsCacheModel.part_number;

        if ((part_number != null) && (part_number.length() == 0)) {
            partsCacheModel.part_number = null;
        }

        partsCacheModel.description = getDescription();

        String description = partsCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            partsCacheModel.description = null;
        }

        partsCacheModel.item_type = getItem_type();

        String item_type = partsCacheModel.item_type;

        if ((item_type != null) && (item_type.length() == 0)) {
            partsCacheModel.item_type = null;
        }

        partsCacheModel.status = getStatus();

        String status = partsCacheModel.status;

        if ((status != null) && (status.length() == 0)) {
            partsCacheModel.status = null;
        }

        partsCacheModel.status_description = getStatus_description();

        String status_description = partsCacheModel.status_description;

        if ((status_description != null) && (status_description.length() == 0)) {
            partsCacheModel.status_description = null;
        }

        partsCacheModel.legacy_part_number = getLegacy_part_number();

        String legacy_part_number = partsCacheModel.legacy_part_number;

        if ((legacy_part_number != null) && (legacy_part_number.length() == 0)) {
            partsCacheModel.legacy_part_number = null;
        }

        partsCacheModel.alternate_item = getAlternate_item();

        String alternate_item = partsCacheModel.alternate_item;

        if ((alternate_item != null) && (alternate_item.length() == 0)) {
            partsCacheModel.alternate_item = null;
        }

        partsCacheModel.unit_cost_material_cost = getUnit_cost_material_cost();

        partsCacheModel.royalty_cost = getRoyalty_cost();

        partsCacheModel.product_code = getProduct_code();

        String product_code = partsCacheModel.product_code;

        if ((product_code != null) && (product_code.length() == 0)) {
            partsCacheModel.product_code = null;
        }

        partsCacheModel.product_code_description = getProduct_code_description();

        String product_code_description = partsCacheModel.product_code_description;

        if ((product_code_description != null) &&
                (product_code_description.length() == 0)) {
            partsCacheModel.product_code_description = null;
        }

        partsCacheModel.product_group = getProduct_group();

        String product_group = partsCacheModel.product_group;

        if ((product_group != null) && (product_group.length() == 0)) {
            partsCacheModel.product_group = null;
        }

        partsCacheModel.product_group_description = getProduct_group_description();

        String product_group_description = partsCacheModel.product_group_description;

        if ((product_group_description != null) &&
                (product_group_description.length() == 0)) {
            partsCacheModel.product_group_description = null;
        }

        partsCacheModel.discount_group = getDiscount_group();

        String discount_group = partsCacheModel.discount_group;

        if ((discount_group != null) && (discount_group.length() == 0)) {
            partsCacheModel.discount_group = null;
        }

        partsCacheModel.discount_group_description = getDiscount_group_description();

        String discount_group_description = partsCacheModel.discount_group_description;

        if ((discount_group_description != null) &&
                (discount_group_description.length() == 0)) {
            partsCacheModel.discount_group_description = null;
        }

        partsCacheModel.us_price_msrp = getUs_price_msrp();

        return partsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(35);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", part_number=");
        sb.append(getPart_number());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", item_type=");
        sb.append(getItem_type());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", status_description=");
        sb.append(getStatus_description());
        sb.append(", legacy_part_number=");
        sb.append(getLegacy_part_number());
        sb.append(", alternate_item=");
        sb.append(getAlternate_item());
        sb.append(", unit_cost_material_cost=");
        sb.append(getUnit_cost_material_cost());
        sb.append(", royalty_cost=");
        sb.append(getRoyalty_cost());
        sb.append(", product_code=");
        sb.append(getProduct_code());
        sb.append(", product_code_description=");
        sb.append(getProduct_code_description());
        sb.append(", product_group=");
        sb.append(getProduct_group());
        sb.append(", product_group_description=");
        sb.append(getProduct_group_description());
        sb.append(", discount_group=");
        sb.append(getDiscount_group());
        sb.append(", discount_group_description=");
        sb.append(getDiscount_group_description());
        sb.append(", us_price_msrp=");
        sb.append(getUs_price_msrp());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(55);

        sb.append("<model><model-name>");
        sb.append("com.example.plugins.model.Parts");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>part_number</column-name><column-value><![CDATA[");
        sb.append(getPart_number());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>item_type</column-name><column-value><![CDATA[");
        sb.append(getItem_type());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status_description</column-name><column-value><![CDATA[");
        sb.append(getStatus_description());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>legacy_part_number</column-name><column-value><![CDATA[");
        sb.append(getLegacy_part_number());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>alternate_item</column-name><column-value><![CDATA[");
        sb.append(getAlternate_item());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>unit_cost_material_cost</column-name><column-value><![CDATA[");
        sb.append(getUnit_cost_material_cost());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>royalty_cost</column-name><column-value><![CDATA[");
        sb.append(getRoyalty_cost());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>product_code</column-name><column-value><![CDATA[");
        sb.append(getProduct_code());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>product_code_description</column-name><column-value><![CDATA[");
        sb.append(getProduct_code_description());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>product_group</column-name><column-value><![CDATA[");
        sb.append(getProduct_group());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>product_group_description</column-name><column-value><![CDATA[");
        sb.append(getProduct_group_description());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>discount_group</column-name><column-value><![CDATA[");
        sb.append(getDiscount_group());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>discount_group_description</column-name><column-value><![CDATA[");
        sb.append(getDiscount_group_description());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>us_price_msrp</column-name><column-value><![CDATA[");
        sb.append(getUs_price_msrp());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
